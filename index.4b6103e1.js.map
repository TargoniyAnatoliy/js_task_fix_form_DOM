{"mappings":"ACEA,IAAM,EAAS,SAAS,gBAAgB,CAAC,SAEpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IAAM,EAAN,EAAA,KAAA,CACG,EAAY,AASpB,SAAuB,CAAS,EAC9B,IAAI,EAAiB,GAEhB,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IAAM,EAAN,EAAA,KAAA,CACH,GAAI,IAAO,EAAG,WAAW,GAAI,CAC3B,GAAkB,IAAM,EAAG,WAAW,GACtC,QACF,CACA,GAAkB,CACpB,C,C,M,E,CANK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUL,OAFA,EAAiB,CAAc,CAAC,EAAE,CAAC,WAAW,GAAK,EAAe,KAAK,CAAC,EAG1E,EAvBkC,EAAM,IAAI,EAE1C,EAAM,kBAAkB,CACtB,cACC,mCAA+C,MAAA,CAAb,EAAM,EAAE,CAAC,MAAc,MAAA,CAAV,EAAU,aAE5D,EAAM,YAAY,CAAC,cAAe,EACpC,C,C,M,E,CARK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar inputs = document.querySelectorAll('input');\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var labelName = normalizeName(input.name);\n        input.insertAdjacentHTML('beforebegin', '<label class=\"field-label\" for=\"'.concat(input.id, '\">').concat(labelName, \"</label>\"));\n        input.setAttribute('placeholder', labelName);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nfunction normalizeName(inputName) {\n    var normalizedName = '';\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = inputName[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var ch = _step.value;\n            if (ch === ch.toUpperCase()) {\n                normalizedName += ' ' + ch.toLowerCase();\n                continue;\n            }\n            normalizedName += ch;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    normalizedName = normalizedName[0].toUpperCase() + normalizedName.slice(1);\n    return normalizedName;\n}\n\n//# sourceMappingURL=index.4b6103e1.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const labelName = normalizeName(input.name);\n\n  input.insertAdjacentHTML(\n    'beforebegin',\n    `<label class=\"field-label\" for=\"${input.id}\">${labelName}</label>`,\n  );\n  input.setAttribute('placeholder', labelName);\n}\n\nfunction normalizeName(inputName) {\n  let normalizedName = '';\n\n  for (const ch of inputName) {\n    if (ch === ch.toUpperCase()) {\n      normalizedName += ' ' + ch.toLowerCase();\n      continue;\n    }\n    normalizedName += ch;\n  }\n\n  normalizedName = normalizedName[0].toUpperCase() + normalizedName.slice(1);\n\n  return normalizedName;\n}\n"],"names":["inputs","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","labelName","normalizeName","inputName","normalizedName","ch","toUpperCase","toLowerCase","err","return","slice","name","insertAdjacentHTML","concat","id","setAttribute"],"version":3,"file":"index.4b6103e1.js.map"}